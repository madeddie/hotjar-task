worker_processes  2;

events {
  worker_connections  1024;
}

http {
  keepalive_timeout  65;
  resolver 127.0.0.11 ipv6=off;

  lua_package_path "./lua/?.lua;./lua/lib/?.lua;;";

  #init_by_lua '
  #  require "resty.core"
  #';

  server {
    listen       80;
    server_name  _;

    default_type  text/html;
    lua_code_cache off;

    location / {
      content_by_lua '
        ngx.say "<html><body>Hi! Try posting some data to <a href=\\"/post\\">/post</a> with key `msg` and any string as value<br />"
        ngx.say "Or try <a href=\\"/get\\">/get</a> to see what has been posted so far</body></html>"
      ';
    }

    location /post {
      if ( $request_method !~ ^POST$ ) {
        add_header Allow "POST" always;
        return 405;
      }
      content_by_lua_file ./lua/post_action.lua;
    }

    location /get {
      if ( $request_method !~ ^GET$ ) {
        add_header Allow "GET" always;
        return 405;
      }
      content_by_lua_file ./lua/get_action.lua;
    }

    location /mqtest {
      content_by_lua_file ./lua/rabbitmq.lua;
    }
  }
}
